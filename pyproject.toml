[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "urbanclear-traffic-system"
version = "1.0.0"
description = "Comprehensive traffic management system with ML-powered analytics"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Traffic System Team", email = "team@urbanclear.com"},
]
keywords = ["traffic", "machine-learning", "analytics", "fastapi", "real-time"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core Data Science & ML
    "pandas>=2.0.0",
    "numpy>=1.25.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.11.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    
    # FastAPI & Web Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    
    # Database & Storage
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.5.0",
    "redis>=5.0.0",
    "aioredis>=2.0.0",
    
    # Message Queue & Streaming
    "kafka-python>=2.0.2",
    "confluent-kafka>=2.3.0",
    "celery>=5.3.0",
    
    # Big Data & Processing
    "pyspark>=3.5.0",
    "findspark>=2.0.1",
    "py4j>=0.10.9",
    
    # Machine Learning & AI
    "tensorflow>=2.13.0",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "transformers>=4.35.0",
    "xgboost>=1.7.0",
    "lightgbm>=4.1.0",
    "catboost>=1.2.0",
    
    # Time Series & Forecasting
    "prophet>=1.1.4",
    "statsmodels>=0.14.0",
    "pmdarima>=2.0.0",
    
    # Geospatial & Maps
    "geopandas>=0.14.0",
    "folium>=0.15.0",
    "geopy>=2.4.0",
    "shapely>=2.0.0",
    
    # Configuration & Environment
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "toml>=0.10.2",
    "configparser>=6.0.0",
    
    # Logging & Monitoring  
    "loguru>=0.7.0",
    "prometheus-client>=0.19.0",
    "prometheus-fastapi-instrumentator>=6.1.0",
    "grafana-api>=1.0.3",
    
    # HTTP & Networking
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    "requests>=2.31.0",
    "websockets>=12.0",
    
    # Security & Authentication
    "cryptography>=41.0.0",
    "pyjwt>=2.8.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    
    # Computer Vision & Image Processing
    "opencv-python>=4.8.0",
    "pillow>=10.1.0",
    
    # Additional Scientific Computing
    "joblib>=1.3.0",
    "dask>=2023.10.0",
    "numba>=0.58.0",
    
    # Optimization & Operations Research
    "pulp>=2.7.0",
    "ortools>=9.7.0",
    
    # Caching & Memory
    "diskcache>=5.6.0",
    "cachetools>=5.3.0",
    
    # Development & Debugging
    "ipython>=8.17.0",
    "jupyter>=1.0.0",
    
    # Utilities & Helpers
    "click>=8.1.0",
    "rich>=13.6.0",
    "tqdm>=4.66.0",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "arrow>=1.3.0",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    # Testing & Development
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.10.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "isort>=5.12.0",
    
    # Security & Code Quality (for CI/CD)
    "bandit>=1.7.5",
    "safety>=2.3.0",
    
    # Performance Testing
    "locust>=2.17.0",
    
    # Additional Testing
    "testfixtures>=7.2.0",
    "factory-boy>=3.3.0",
    "responses>=0.23.0",
    
    # Development Tools
    "pre-commit>=3.5.0",
    "codecov>=2.1.0",
]

ci = [
    # CI/CD Dependencies - Minimal and Essential
    "fastapi>=0.104.1,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "sqlalchemy>=2.0.23,<3.0.0",
    "psycopg2-binary>=2.9.9,<3.0.0",
    "pandas>=2.0.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "httpx>=0.25.2,<1.0.0",
    "requests>=2.31.0,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "pyyaml>=6.0.1,<7.0.0",
    "loguru>=0.7.2,<1.0.0",
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "coverage>=7.0.0,<8.0.0",
    "black>=23.12.0,<24.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.7.1,<2.0.0",
    "types-requests>=2.31.0,<3.0.0",
    "types-PyYAML>=6.0.12,<7.0.0",
    "bandit>=1.7.5,<2.0.0",
    "safety>=2.3.5,<4.0.0",
    "cryptography>=41.0.0",
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "passlib[bcrypt]>=1.7.4,<2.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    "websockets>=12.0,<13.0.0",
    "python-dateutil>=2.8.2,<3.0.0",
    "prometheus-client>=0.19.0,<1.0.0",
    "prometheus-fastapi-instrumentator>=6.1.0,<7.0.0",
    "click>=8.1.7,<9.0.0",
    "rich>=13.7.0,<14.0.0",
    "colorama>=0.4.6,<1.0.0",
    "locust>=2.17.0,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/urbanclear/traffic-system"
Documentation = "https://docs.urbanclear.com"
Repository = "https://github.com/urbanclear/traffic-system.git"
Issues = "https://github.com/urbanclear/traffic-system/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=5",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "performance: marks tests as performance tests",
    "asyncio: marks tests as async tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/migrations/*",
    "*/venv/*",
    "*/virtualenv/*",
    "*/.tox/*",
    "*/.pytest_cache/*",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]

[tool.safety]
# Safety configuration for dependency vulnerability scanning
full_report = true
ignore = []

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
known_first_party = ["src"]
known_third_party = ["fastapi", "pydantic", "pandas", "numpy", "scikit-learn"] 